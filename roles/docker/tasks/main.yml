- name: Install Docker
  yum: name=docker state=latest
 
- name: Enable Docker Daemon
  service: 
    name: docker
    state: started
    enabled: yes

- name: Install pip
  yum: name=python-pip state=latest

# Copies a docker engine config that specifies debug logging
# kill -USR1 <daemon-pid> to dump stacks to the logs
# https://docs.docker.com/engine/admin/configuring/
- name: Configure Docker for Debug Mode
  copy: 
    src: "files/docker.debug.config"
    dest:  /etc/sysconfig/docker
    owner: root
    group: root
    mode: 0644
  when: docker_debug

- name: copy cert
  copy: src={{ cert }} dest=/etc/ssl/

- name: copy config
  copy: src=haproxy.cfg dest=/etc/haproxy/

- name: copy Dockerfile
  copy: src=Dockerfile dest=/root/workingdir/

- name: Install docker-py 
  pip: name=docker-py state=latest

- name: firewall setting
  firewalld:
    port: "{{ item.fwport }}"
    permanent: "{{ item.permanent }}"
    state: enabled
  with_items: "{{ ports }}"

- name: reload firewall
  shell: firewall-cmd --reload

- name: Restart Docker Daemon
  service:
    name: docker
    state: restarted
    enabled: yes

- name: build image
  docker_image:
    name=my-haproxy
    path=/root/workingdir
    state=present

- name: run haproxy in a docker container
  docker:
    name: "{{ container_name }}"
    image: "my-haproxy"
    state: present 
    #restart_policy: on-failure
    volumes:
    - /etc/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    - "/etc/ssl/{{ cert }}:/etc/ssl/{{ cert }}:ro"
    expose: "{{ tports }}"
    ports:
      - " {{ vip }}:80:80"
      - " {{ vip }}:443:443"

- name: create systemd for "{{ container_name }}"
  template: 
    src: haproxy_container.service.j2
    dest: /etc/systemd/system/haproxy_container.service
  notify:
    - reload systemd
    - start haproxy_container
